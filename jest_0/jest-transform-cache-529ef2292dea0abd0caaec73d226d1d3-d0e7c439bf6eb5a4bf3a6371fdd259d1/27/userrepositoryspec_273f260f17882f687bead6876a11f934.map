{"file":"/home/dmytropoliuliuk/Documents/myGitPrs/nestjs_app/nestjs/src/auth/user-repository.spec.ts","mappings":"AAAA,0CAA0C;AAC1C,sDAAsD;AAEtD,qFAAqF;AAErF,qCAAqC;AACrC,wBAAwB;AAExB,6BAA6B;AAC7B,sDAAsD;AACtD,qBAAqB;AACrB,0BAA0B;AAC1B,WAAW;AACX,oBAAoB;AAEpB,yEAAyE;AACzE,QAAQ;AAER,kCAAkC;AAClC,mBAAmB;AAEnB,4BAA4B;AAC5B,+BAA+B;AAC/B,0EAA0E;AAC1E,aAAa;AAEb,4DAA4D;AAC5D,gDAAgD;AAChD,uFAAuF;AACvF,aAAa;AACb,WAAW;AAGX,MAAM","names":[],"sources":["/home/dmytropoliuliuk/Documents/myGitPrs/nestjs_app/nestjs/src/auth/user-repository.spec.ts"],"sourcesContent":["// import { Test } from '@nestjs/testing';\n// import { UserRepository } from './user.repository';\n\n// const mockCredentialsDto = { username: 'TestUserName', password: 'TestPassword' };\n\n// describe('UserRepository', () => {\n//   let userRepository;\n\n//   beforeEach(async () => {\n//     const module = await Test.createTestingModule({\n//       providers: [\n//         UserRepository,\n//       ],\n//     }).compile();\n\n//     userRepository = await module.get<UserRepository>(UserRepository);\n//   });\n\n// //   describe('signUp', () => {\n// //     let save;\n\n// //     beforeEach(() => {\n// //         save = jest.fn();\n// //         userRepository.create = jest.fn().mockReturnValue({ save });\n// //     });\n\n// //     it('successfully signs up the user', async () => {\n// //         save.mockResolvedValue(undefined);\n// //         expect(userRepository.signUp(mockCredentialsDto)).resolves.not.toThrow();\n// //     });\n// //   });\n\n \n// });\n"],"version":3}